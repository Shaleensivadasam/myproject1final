package com.example.myapplication;

import androidx.appcompat.app.AppCompatActivity;

import android.app.DatePickerDialog;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Bundle;
import android.preference.PreferenceManager;
import android.provider.MediaStore;
import android.util.Base64;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RadioButton;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import com.android.volley.DefaultRetryPolicy;
import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONObject;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.net.URISyntaxException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

public class Registration extends AppCompatActivity implements View.OnClickListener, AdapterView.OnItemSelectedListener {
    TextView t1;
    EditText ed_name,ed_dob,ed_hno,ed_pincode,ed_email,ed_phno,ed_password,ed_cpass;
    RadioButton rb_male,rb_female;
    Spinner sp_district;
    Button b_signup;
    ImageView im_image;

    String[] district={"Kasargode","Kannur","Kozhikode","Malapuram","Palakad","Thiruvanathapuram","Kollam","Pathanamthitta","Alapuya","Kottayam","Edukki","Eranakulam","Thrissur","Vayanad"};
    String sel_dist="";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_registration);
        t1=(TextView)findViewById(R.id.textView);
        ed_name=(EditText)findViewById(R.id.editText2);
        ed_dob=(EditText)findViewById(R.id.editText6);
        ed_hno=(EditText)findViewById(R.id.editText7);
        ed_pincode=(EditText)findViewById(R.id.editText8);
        ed_email=(EditText)findViewById(R.id.editText9);
        ed_phno=(EditText)findViewById(R.id.editText5);
        ed_password=(EditText)findViewById(R.id.editText11);
        ed_cpass=(EditText)findViewById(R.id.editText12);
        rb_male=(RadioButton)findViewById(R.id.radioButton);
        rb_female=(RadioButton)findViewById(R.id.radioButton3);
        sp_district=(Spinner)findViewById(R.id.spinner2);
        im_image=(ImageView)findViewById(R.id.imageView2);
        im_image.setOnClickListener(this);
        b_signup=(Button)findViewById(R.id.button4);
        b_signup.setOnClickListener(this);

        final Calendar myCalendar = Calendar.getInstance();
        final DatePickerDialog.OnDateSetListener date = new DatePickerDialog.OnDateSetListener() {

            @Override
            public void onDateSet(DatePicker view, int year, int monthOfYear,
                                  int dayOfMonth) {
                // TODO Auto-generated method stub
                myCalendar.set(Calendar.YEAR, year);
                myCalendar.set(Calendar.MONTH, monthOfYear);
                myCalendar.set(Calendar.DAY_OF_MONTH, dayOfMonth);
                String myFormat = "yyyy-MM-dd"; //In which you need put here


                SimpleDateFormat sdf = new SimpleDateFormat(myFormat, Locale.US);
                ed_dob.setText(sdf.format(myCalendar.getTime()));
            }

        };

        ed_dob.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                // TODO Auto-generated method stub
                new DatePickerDialog(Registration.this, date, myCalendar
                        .get(Calendar.YEAR), myCalendar.get(Calendar.MONTH),
                        myCalendar.get(Calendar.DAY_OF_MONTH)).show();
            }
        });



        ArrayAdapter<String> ad=new ArrayAdapter<String>(getApplicationContext(),android.R.layout.simple_list_item_1,district);
        sp_district.setAdapter(ad);
        sp_district.setOnItemSelectedListener(this);
    }
    String path, atype, fname, attach, attatch1;
    byte[] byteArray = null;

    void showfilechooser(int string) {
        // TODO Auto-generated method stub
        Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
        //getting all types of files

        intent.setType("*/*");
        intent.addCategory(Intent.CATEGORY_OPENABLE);

        try {
            startActivityForResult(Intent.createChooser(intent, "Select a File to Upload"), string);
        } catch (android.content.ActivityNotFoundException ex) {
            // Potentially direct the user to the Market with a Dialog
            Toast.makeText(getApplicationContext(), "Please install a File Manager.", Toast.LENGTH_SHORT).show();

        }
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if (resultCode == RESULT_OK) {
            if (requestCode == 1) {
                ////
                Uri uri = data.getData();

                try {
                    path = FileUtils.getPath(this, uri);

                    File fil = new File(path);
                    float fln = (float) (fil.length() / 1024);
                    atype = path.substring(path.lastIndexOf(".") + 1);


                    fname = path.substring(path.lastIndexOf("/") + 1);
                } catch (URISyntaxException e) {
                    e.printStackTrace();
                }

                try {

                    File imgFile = new File(path);

                    if (imgFile.exists()) {

                        Bitmap myBitmap = BitmapFactory.decodeFile(imgFile.getAbsolutePath());
                        im_image.setImageBitmap(myBitmap);

                    }


                    File file = new File(path);
                    byte[] b = new byte[8192];
                    Log.d("bytes read", "bytes read");

                    InputStream inputStream = new FileInputStream(file);
                    ByteArrayOutputStream bos = new ByteArrayOutputStream();

                    int bytesRead = 0;

                    while ((bytesRead = inputStream.read(b)) != -1) {
                        bos.write(b, 0, bytesRead);
                    }
                    byteArray = bos.toByteArray();

                    String str = Base64.encodeToString(byteArray, Base64.NO_WRAP);
                    attach = str;


                } catch (Exception e) {
                    Toast.makeText(this, "String :" + e.getMessage().toString(), Toast.LENGTH_LONG).show();
                }


            }
        }
    }


String gen="";
    @Override
    public void onClick(View v) {
        if (v==im_image)
        {
showfilechooser(1);
        }
        else {
            final String s_name, s_dob, s_hno, s_pincode, s_email, s_phno, s_password, s_cpass, s_male, s_female, s_district, s_image;
            s_name = ed_name.getText().toString();
            s_dob = ed_dob.getText().toString();
            s_hno = ed_hno.getText().toString();
            s_pincode = ed_pincode.getText().toString();
            s_email = ed_email.getText().toString();
            s_phno = ed_phno.getText().toString();
            s_password = ed_password.getText().toString();
            s_cpass = ed_cpass.getText().toString();
            if (rb_male.isChecked() == true) {
                gen = "male";
            } else {
                gen = "female";
            }
            if(s_name.equalsIgnoreCase(""))
            {
                ed_name.setError("Enter name");
            }
            else if(s_hno.equalsIgnoreCase(""))
            {
                ed_hno.setError("Enter house no/name");
            }
            else if(s_pincode.equalsIgnoreCase(""))
            {
                ed_pincode.setError("Enter pincoe");
            }
            else if(s_phno.equalsIgnoreCase(""))
            {
                ed_phno.setError("Enter phone number");
            }
            else if(s_phno.length()!=10)
            {
                ed_phno.setError("Enter 10 numbers");
            }
            else if(s_password.equalsIgnoreCase(""))
            {
                ed_password.setError("Enter password");
            }
            else if(s_password.length()<8)
            {
                ed_phno.setError("Enter password upto 8");
            }

            SharedPreferences sh = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());

            String hu = sh.getString("ip", "");
            String url = "http://" + hu + ":8000/myapp/and_user_signup/";
            //  Toast.makeText(getApplicationContext(),"tt="+url,Toast.LENGTH_LONG).show();

            RequestQueue requestQueue = Volley.newRequestQueue(getApplicationContext());
            StringRequest postRequest = new StringRequest(Request.Method.POST, url,
                    new Response.Listener<String>() {
                        @Override
                        public void onResponse(String response) {
                            //  Toast.makeText(getApplicationContext(), response, Toast.LENGTH_LONG).show();

                            // response
                            try {
                                JSONObject jsonObj = new JSONObject(response);
                                if (jsonObj.getString("status").equalsIgnoreCase("ok")) {


                                    Toast.makeText(Registration.this, "Account successfully created", Toast.LENGTH_SHORT).show();
                                    Intent ij = new Intent(getApplicationContext(), Login.class);
                                    startActivity(ij);


                                }
                                                              // }
                                else {
                                    Toast.makeText(getApplicationContext(), "Not found", Toast.LENGTH_LONG).show();
                                }

                            } catch (Exception e) {
                                Toast.makeText(getApplicationContext(), "Error" + e.getMessage().toString(), Toast.LENGTH_SHORT).show();
                            }
                        }
                    },
                    new Response.ErrorListener() {
                        @Override
                        public void onErrorResponse(VolleyError error) {
                            // error
                            Toast.makeText(getApplicationContext(), "eeeee" + error.toString(), Toast.LENGTH_SHORT).show();
                        }
                    }
            ) {
                @Override
                protected Map<String, String> getParams() {
                    SharedPreferences sh = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
                    Map<String, String> params = new HashMap<String, String>();

//                String id=sh.getString("uid","");
                    params.put("name", s_name);
                    params.put("gender", gen);
                    params.put("dob", s_dob);
                    params.put("email", s_email);
                    params.put("phno", s_phno);
                    params.put("houseno_name", s_hno);
                    params.put("district", sel_dist);
                    params.put("pincode", s_pincode);
                    params.put("password", s_password);
                    params.put("cpassword", s_cpass);
                    params.put("image", attach);


//                params.put("mac",maclis);

                    return params;
                }
            };

            int MY_SOCKET_TIMEOUT_MS = 100000;

            postRequest.setRetryPolicy(new DefaultRetryPolicy(
                    MY_SOCKET_TIMEOUT_MS,
                    DefaultRetryPolicy.DEFAULT_MAX_RETRIES,
                    DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));
            requestQueue.add(postRequest);

        }


    }

    @Override
    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
        sel_dist=district[position];
    }

    @Override
    public void onNothingSelected(AdapterView<?> parent) {

    }
}
